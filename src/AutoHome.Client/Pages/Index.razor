@page "/"
@inject IDevicesManager DevicesManager;
@inject IMapper Mapper;

@if (_devices is not null && _devices.Any())
{
    foreach (var device in _devices)
    {
        switch (device.Type)
        {
            case "Curtain":
                <MudText Typo="Typo.h4" Class="mt-4 mb-4">@device.Name Controls</MudText>
                <CurtainControls Device="device" />
                break;
        }
    }
}

@code {
    IEnumerable<Device>? _devices { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var devicesResult = await DevicesManager.ListAsync(CancellationToken.None);
        var devices = devicesResult!.Select(i => Mapper.Map<Device>(i));

        if (devices is not null && devices.Any()) _devices = devices;
    }
}
